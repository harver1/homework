# Создать класс TrafficLight (светофор) и определить у него один атрибут color (цвет) и метод running (запуск).
# Атрибут реализовать как приватный. В рамках метода реализовать переключение светофора в режимы: красный, желтый,
# зеленый. Продолжительность первого состояния (красный) составляет 7 секунд, второго (желтый) — 2 секунды,
# третьего (зеленый) — на ваше усмотрение. Переключение между режимами должно осуществляться только в указанном
# порядке (красный, желтый, зеленый). Проверить работу примера, создав экземпляр и вызвав описанный метод.
# Задачу можно усложнить, реализовав проверку порядка режимов, и при его нарушении выводить соответствующее
# сообщение и завершать скрипт.

from time import sleep


class TraficLight():

    __color_dict = {'Красный': 7, 'Желтый': 5, 'Зеленый': 12}

    def __init__(self):
        self.__color = self.__color_dict

    def runing(self):
        for colors, duration in self.__color.items():
            print(f"Загорелся {colors}, будет гореть {duration} сек")
            sleep(duration)
        print(f'Светофор завершил свою работу')

    def runing1(self, red=7, yellow=2, green=5, repeat=1):
        """При желании можно изменить интервал каждого цвета, присвоив им соответсвуующие значения.
        Так же можно указать количество циклов(по умолчанию 1) передав в метод runing1() сооттветсвующее значение"""
        duration = [red, yellow, green]
        t = 0
        for i in self.__color:
            self.__color[i] = duration[t]
            t += 1
        for i in range(1, repeat+1):
            for colors, duration in self.__color.items():  # нужно вертать ключ и значения
                print(f"Загорелся {colors}, будет гореть {duration} сек")
                sleep(duration)
        print(f"Светофор завершил свою работу, количество циклов - {repeat}")


sv = TraficLight()
sv.runing()
# sv.runing1(1, 2, 1, 2)
